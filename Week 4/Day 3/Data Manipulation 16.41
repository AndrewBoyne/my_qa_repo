{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "8d8fdd13",
   "metadata": {},
   "source": [
    "# Data Manipulation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "d7fa3916",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "\n",
    "df1 = pd.read_csv(\"data/mortgage_applicants.csv\")\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "d8c45aa0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>ID</th>\n",
       "      <th>Income</th>\n",
       "      <th>Term</th>\n",
       "      <th>Balance</th>\n",
       "      <th>Debt</th>\n",
       "      <th>Score</th>\n",
       "      <th>Default</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>567</td>\n",
       "      <td>17626</td>\n",
       "      <td>10 Years</td>\n",
       "      <td>1381</td>\n",
       "      <td>293</td>\n",
       "      <td>228.0</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>523</td>\n",
       "      <td>18959</td>\n",
       "      <td>20 Years</td>\n",
       "      <td>883</td>\n",
       "      <td>1012</td>\n",
       "      <td>187.0</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>544</td>\n",
       "      <td>20560</td>\n",
       "      <td>10 Years</td>\n",
       "      <td>684</td>\n",
       "      <td>898</td>\n",
       "      <td>86.0</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>370</td>\n",
       "      <td>21894</td>\n",
       "      <td>10 Years</td>\n",
       "      <td>748</td>\n",
       "      <td>85</td>\n",
       "      <td>NaN</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>756</td>\n",
       "      <td>24430</td>\n",
       "      <td>10 Years</td>\n",
       "      <td>1224</td>\n",
       "      <td>59</td>\n",
       "      <td>504.0</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>851</th>\n",
       "      <td>851</td>\n",
       "      <td>71</td>\n",
       "      <td>30191</td>\n",
       "      <td>20 Years</td>\n",
       "      <td>1319</td>\n",
       "      <td>3880</td>\n",
       "      <td>55.0</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>852</th>\n",
       "      <td>852</td>\n",
       "      <td>932</td>\n",
       "      <td>41669</td>\n",
       "      <td>20 Years</td>\n",
       "      <td>1385</td>\n",
       "      <td>32</td>\n",
       "      <td>780.0</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>853</th>\n",
       "      <td>853</td>\n",
       "      <td>39</td>\n",
       "      <td>36816</td>\n",
       "      <td>20 Years</td>\n",
       "      <td>1868</td>\n",
       "      <td>3123</td>\n",
       "      <td>366.0</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>854</th>\n",
       "      <td>854</td>\n",
       "      <td>283</td>\n",
       "      <td>42145</td>\n",
       "      <td>20 Years</td>\n",
       "      <td>1447</td>\n",
       "      <td>2498</td>\n",
       "      <td>422.0</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>855</th>\n",
       "      <td>855</td>\n",
       "      <td>847</td>\n",
       "      <td>30594</td>\n",
       "      <td>20 Years</td>\n",
       "      <td>1216</td>\n",
       "      <td>2473</td>\n",
       "      <td>179.0</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>856 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Unnamed: 0   ID  Income      Term  Balance  Debt  Score  Default\n",
       "0             0  567   17626  10 Years     1381   293  228.0    False\n",
       "1             1  523   18959  20 Years      883  1012  187.0    False\n",
       "2             2  544   20560  10 Years      684   898   86.0    False\n",
       "3             3  370   21894  10 Years      748    85    NaN    False\n",
       "4             4  756   24430  10 Years     1224    59  504.0    False\n",
       "..          ...  ...     ...       ...      ...   ...    ...      ...\n",
       "851         851   71   30191  20 Years     1319  3880   55.0     True\n",
       "852         852  932   41669  20 Years     1385    32  780.0    False\n",
       "853         853   39   36816  20 Years     1868  3123  366.0     True\n",
       "854         854  283   42145  20 Years     1447  2498  422.0    False\n",
       "855         855  847   30594  20 Years     1216  2473  179.0     True\n",
       "\n",
       "[856 rows x 8 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "f196988e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"2\" halign=\"left\">Balance</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Debt</th>\n",
       "      <th colspan=\"2\" halign=\"left\">ID</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Income</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Score</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Unnamed: 0</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Term</th>\n",
       "      <th>10 Years</th>\n",
       "      <th>20 Years</th>\n",
       "      <th>10 Years</th>\n",
       "      <th>20 Years</th>\n",
       "      <th>10 Years</th>\n",
       "      <th>20 Years</th>\n",
       "      <th>10 Years</th>\n",
       "      <th>20 Years</th>\n",
       "      <th>10 Years</th>\n",
       "      <th>20 Years</th>\n",
       "      <th>10 Years</th>\n",
       "      <th>20 Years</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Default</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>False</th>\n",
       "      <td>1161.590133</td>\n",
       "      <td>1344.688797</td>\n",
       "      <td>546.523719</td>\n",
       "      <td>631.228216</td>\n",
       "      <td>488.963947</td>\n",
       "      <td>501.730290</td>\n",
       "      <td>28228.009488</td>\n",
       "      <td>34880.792531</td>\n",
       "      <td>436.150097</td>\n",
       "      <td>572.995781</td>\n",
       "      <td>390.759013</td>\n",
       "      <td>521.713693</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>True</th>\n",
       "      <td>1101.894737</td>\n",
       "      <td>1251.741935</td>\n",
       "      <td>1805.561404</td>\n",
       "      <td>1904.935484</td>\n",
       "      <td>511.526316</td>\n",
       "      <td>564.806452</td>\n",
       "      <td>23848.526316</td>\n",
       "      <td>31200.451613</td>\n",
       "      <td>209.745455</td>\n",
       "      <td>310.354839</td>\n",
       "      <td>302.526316</td>\n",
       "      <td>549.451613</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Balance                      Debt                       ID  \\\n",
       "Term        10 Years     20 Years     10 Years     20 Years    10 Years   \n",
       "Default                                                                   \n",
       "False    1161.590133  1344.688797   546.523719   631.228216  488.963947   \n",
       "True     1101.894737  1251.741935  1805.561404  1904.935484  511.526316   \n",
       "\n",
       "                           Income                     Score              \\\n",
       "Term       20 Years      10 Years      20 Years    10 Years    20 Years   \n",
       "Default                                                                   \n",
       "False    501.730290  28228.009488  34880.792531  436.150097  572.995781   \n",
       "True     564.806452  23848.526316  31200.451613  209.745455  310.354839   \n",
       "\n",
       "         Unnamed: 0              \n",
       "Term       10 Years    20 Years  \n",
       "Default                          \n",
       "False    390.759013  521.713693  \n",
       "True     302.526316  549.451613  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.pivot_table(index='Default', columns = 'Term',)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "d2c892a5",
   "metadata": {},
   "outputs": [],
   "source": [
    "weather = pd.read_json(\"data/weather.json\", orient=\"split\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "5caa5489",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>temp</th>\n",
       "      <th>humidity</th>\n",
       "      <th>sun_hrs</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2023-07-15</th>\n",
       "      <td>15.68</td>\n",
       "      <td>73.18</td>\n",
       "      <td>6.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-07-16</th>\n",
       "      <td>25.16</td>\n",
       "      <td>83.88</td>\n",
       "      <td>8.06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-07-17</th>\n",
       "      <td>13.26</td>\n",
       "      <td>80.05</td>\n",
       "      <td>4.89</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-07-18</th>\n",
       "      <td>24.63</td>\n",
       "      <td>82.37</td>\n",
       "      <td>9.13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-07-19</th>\n",
       "      <td>12.78</td>\n",
       "      <td>83.10</td>\n",
       "      <td>17.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-07-20</th>\n",
       "      <td>23.52</td>\n",
       "      <td>85.35</td>\n",
       "      <td>0.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-07-21</th>\n",
       "      <td>17.80</td>\n",
       "      <td>85.64</td>\n",
       "      <td>5.79</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-07-22</th>\n",
       "      <td>24.98</td>\n",
       "      <td>76.81</td>\n",
       "      <td>10.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-07-23</th>\n",
       "      <td>23.48</td>\n",
       "      <td>80.86</td>\n",
       "      <td>3.77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-07-24</th>\n",
       "      <td>23.30</td>\n",
       "      <td>79.96</td>\n",
       "      <td>14.62</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             temp  humidity  sun_hrs\n",
       "2023-07-15  15.68     73.18     6.40\n",
       "2023-07-16  25.16     83.88     8.06\n",
       "2023-07-17  13.26     80.05     4.89\n",
       "2023-07-18  24.63     82.37     9.13\n",
       "2023-07-19  12.78     83.10    17.10\n",
       "2023-07-20  23.52     85.35     0.72\n",
       "2023-07-21  17.80     85.64     5.79\n",
       "2023-07-22  24.98     76.81    10.95\n",
       "2023-07-23  23.48     80.86     3.77\n",
       "2023-07-24  23.30     79.96    14.62"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "cf3950c7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DatetimeIndex(['2023-07-15', '2023-07-16', '2023-07-17', '2023-07-18',\n",
       "               '2023-07-19', '2023-07-20', '2023-07-21', '2023-07-22',\n",
       "               '2023-07-23', '2023-07-24'],\n",
       "              dtype='datetime64[ns]', freq=None)"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather.index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "b66a903a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "temp        15.68\n",
       "humidity    73.18\n",
       "sun_hrs      6.40\n",
       "Name: 2023-07-15 00:00:00, dtype: float64"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather.loc['2023-07-15',:] # shows the row specified"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "d8210277",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "15.68"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather.loc['2023-07-15', 'temp'] # or a particular column "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "a05e4e53",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>temp</th>\n",
       "      <th>humidity</th>\n",
       "      <th>sun_hrs</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2023-07-15</th>\n",
       "      <td>15.68</td>\n",
       "      <td>73.18</td>\n",
       "      <td>6.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-07-16</th>\n",
       "      <td>25.16</td>\n",
       "      <td>83.88</td>\n",
       "      <td>8.06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-07-17</th>\n",
       "      <td>13.26</td>\n",
       "      <td>80.05</td>\n",
       "      <td>4.89</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-07-18</th>\n",
       "      <td>24.63</td>\n",
       "      <td>82.37</td>\n",
       "      <td>9.13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-07-19</th>\n",
       "      <td>12.78</td>\n",
       "      <td>83.10</td>\n",
       "      <td>17.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-07-20</th>\n",
       "      <td>23.52</td>\n",
       "      <td>85.35</td>\n",
       "      <td>0.72</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             temp  humidity  sun_hrs\n",
       "2023-07-15  15.68     73.18     6.40\n",
       "2023-07-16  25.16     83.88     8.06\n",
       "2023-07-17  13.26     80.05     4.89\n",
       "2023-07-18  24.63     82.37     9.13\n",
       "2023-07-19  12.78     83.10    17.10\n",
       "2023-07-20  23.52     85.35     0.72"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather.loc['2023-07-15':'2023-07-20'] # info between two dates"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "bb0689fc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>temp</th>\n",
       "      <th>humidity</th>\n",
       "      <th>sun_hrs</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [temp, humidity, sun_hrs]\n",
       "Index: []"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather.loc['2023-08':] # would bring everything for August (but this table has no figs for Aug)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "eaa63641",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DatetimeIndex(['2023-01-31', '2023-02-28', '2023-03-31', '2023-04-30',\n",
       "               '2023-05-31', '2023-06-30', '2023-07-31', '2023-08-31',\n",
       "               '2023-09-30', '2023-10-31', '2023-11-30', '2023-12-31',\n",
       "               '2024-01-31', '2024-02-29', '2024-03-31', '2024-04-30',\n",
       "               '2024-05-31', '2024-06-30', '2024-07-31', '2024-08-31',\n",
       "               '2024-09-30', '2024-10-31', '2024-11-30', '2024-12-31'],\n",
       "              dtype='datetime64[ns]', freq='M')"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.date_range(start='2023', end='2025', freq='M')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "05509152",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DatetimeIndex(['2023-01-31 00:00:00+00:00', '2023-02-28 00:00:00+00:00',\n",
       "               '2023-03-31 00:00:00+00:00', '2023-04-30 00:00:00+00:00',\n",
       "               '2023-05-31 00:00:00+00:00', '2023-06-30 00:00:00+00:00',\n",
       "               '2023-07-31 00:00:00+00:00', '2023-08-31 00:00:00+00:00',\n",
       "               '2023-09-30 00:00:00+00:00', '2023-10-31 00:00:00+00:00',\n",
       "               '2023-11-30 00:00:00+00:00', '2023-12-31 00:00:00+00:00',\n",
       "               '2024-01-31 00:00:00+00:00', '2024-02-29 00:00:00+00:00',\n",
       "               '2024-03-31 00:00:00+00:00', '2024-04-30 00:00:00+00:00',\n",
       "               '2024-05-31 00:00:00+00:00', '2024-06-30 00:00:00+00:00',\n",
       "               '2024-07-31 00:00:00+00:00', '2024-08-31 00:00:00+00:00',\n",
       "               '2024-09-30 00:00:00+00:00', '2024-10-31 00:00:00+00:00',\n",
       "               '2024-11-30 00:00:00+00:00', '2024-12-31 00:00:00+00:00'],\n",
       "              dtype='datetime64[ns, UTC]', freq='M')"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.date_range(start='2023', end='2025', freq='M', tz='utc') # time zones"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "2aeffafe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DatetimeIndex(['2023-01-31 00:00:00+00:00', '2023-02-28 00:00:00+00:00',\n",
       "               '2023-03-31 00:00:00+00:00', '2023-04-30 00:00:00+00:00',\n",
       "               '2023-05-31 00:00:00+00:00', '2023-06-30 00:00:00+00:00',\n",
       "               '2023-07-31 00:00:00+00:00', '2023-08-31 00:00:00+00:00',\n",
       "               '2023-09-30 00:00:00+00:00', '2023-10-31 00:00:00+00:00',\n",
       "               '2023-11-30 00:00:00+00:00', '2023-12-31 00:00:00+00:00',\n",
       "               '2024-01-31 00:00:00+00:00', '2024-02-29 00:00:00+00:00',\n",
       "               '2024-03-31 00:00:00+00:00', '2024-04-30 00:00:00+00:00',\n",
       "               '2024-05-31 00:00:00+00:00', '2024-06-30 00:00:00+00:00',\n",
       "               '2024-07-31 00:00:00+00:00', '2024-08-31 00:00:00+00:00',\n",
       "               '2024-09-30 00:00:00+00:00', '2024-10-31 00:00:00+00:00',\n",
       "               '2024-11-30 00:00:00+00:00', '2024-12-31 00:00:00+00:00'],\n",
       "              dtype='datetime64[ns, GMT]', freq='M')"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.date_range(start='2023', end='2025', freq='M', tz='gmt') # time zones"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "e83a4920",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>temp</th>\n",
       "      <th>humidity</th>\n",
       "      <th>sun_hrs</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2023-07-15</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-07-16</th>\n",
       "      <td>20.42</td>\n",
       "      <td>78.53</td>\n",
       "      <td>7.23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-07-17</th>\n",
       "      <td>18.03</td>\n",
       "      <td>79.04</td>\n",
       "      <td>6.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-07-18</th>\n",
       "      <td>19.68</td>\n",
       "      <td>79.87</td>\n",
       "      <td>7.12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023-07-19</th>\n",
       "      <td>18.30</td>\n",
       "      <td>80.52</td>\n",
       "      <td>9.12</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             temp  humidity  sun_hrs\n",
       "2023-07-15    NaN       NaN      NaN\n",
       "2023-07-16  20.42     78.53     7.23\n",
       "2023-07-17  18.03     79.04     6.45\n",
       "2023-07-18  19.68     79.87     7.12\n",
       "2023-07-19  18.30     80.52     9.12"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather.rolling(window=7,\n",
    "               min_periods=2).mean().round(2).head() # calculates the rolling ave per day for the 7 day period\n",
    "                                                     #so the first period is Mon- Sun, the next is Tue-Mon, Wed-Tue etc"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "ec4ca377",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'df' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[34], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m pd\u001b[38;5;241m.\u001b[39mmerge(left\u001b[38;5;241m=\u001b[39m\u001b[43mdf\u001b[49m,\n\u001b[0;32m      2\u001b[0m         right\u001b[38;5;241m=\u001b[39mlocations,\n\u001b[0;32m      3\u001b[0m         on\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mID\u001b[39m\u001b[38;5;124m'\u001b[39m)\u001b[38;5;241m.\u001b[39mhead()\n",
      "\u001b[1;31mNameError\u001b[0m: name 'df' is not defined"
     ]
    }
   ],
   "source": [
    "pd.merge(left=df,\n",
    "        right=locations,\n",
    "        on='ID').head()    # When we know where the locations file is saved.  ID is the common column.\n",
    "                           #pd means it's a Pandas instruction so, if we want to save any such merges or concatenations etc we\n",
    "                           #need to rename them eg whole=pd.merge(left.df...)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3e9416ca",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
